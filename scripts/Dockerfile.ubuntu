FROM ubuntu:20.04

ARG DEBIAN_FRONTEND=noninteractive

################################################################################
# Bootstrap
################################################################################
RUN set -ex

RUN apt-get update && apt-get upgrade -y
RUN apt-get update && apt-get install dialog apt-utils -y

RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt-get update

RUN apt-get update && apt-get install sudo

################################################################################
# Install LIBRA packages
################################################################################
# Core
RUN apt-get update && apt-get install -y \
    git \
    ssh \
    curl \
    make \
    cmake \
    gcc \
    g++ \
    gcc-9 \
    g++-9 \
    git-extras \
    lintian \
    gdb \
    valgrind


# Devel
RUN apt-get update && apt-get install -y \
    lcov \
    python3-pip \
    file \
    graphviz \
    doxygen \
    curl

RUN pip3 install \
    sphinx \
    docutils==0.18.1 \
    sphinx-rtd-theme \
    sphinx-argparse \
    sphinx-tabs \
    sphinx-last-updated-by-git \
    sphinxcontrib-doxylink \
    autoapi \
    graphviz \
    breathe \
    exhale

################################################################################
# Install RCSW packages
################################################################################
# Dependencies
RUN git clone https://github.com/HardySimpson/zlog.git
RUN cd zlog && \
    mkdir build && cd build && \
    cmake .. && \
    make -j $(grep -c ^processor /proc/cpuinfo) install

# Devel
RUN apt-get update && apt-get install -y catch

################################################################################
# Install RCPPSW packages
################################################################################
# Devel
RUN apt-get update && apt-get install -y libboost-all-dev liblog4cxx-dev

################################################################################
# Install COSM packages
################################################################################
# ARGoS dependencies
RUN apt-get update && apt-get install -y \
    qtbase5-dev \
    libfreeimageplus-dev \
    freeglut3-dev \
    libeigen3-dev \
    libudev-dev \
    liblua5.3-dev \
    libfreeimage-dev \
    libxi-dev \
    libxmu-dev \
    libgraphviz-dev \
    asciidoc

# ARGoS
RUN git clone https://github.com/jharwell/argos3.git
RUN cd argos3 && \
    git checkout devel && \
    mkdir build && cd build && \
    cmake -DARGOS_DOCUMENTATION=OFF -DARGOS_WITH_LUA=OFF ../src && \
    make -j $(grep -c ^processor /proc/cpuinfo) install

# !!!! ROS1 noetic: 20.04 ONLY !!!!
#
# 20.04 has cmake 3.16, so we need to manually install a more recent version.
#
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
RUN apt-get update && apt-get install -y cmake

# Now we can actually install ROS
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -

RUN apt-get update && apt-get install -y \
    ros-noetic-desktop-full \
    ros-noetic-turtlebot3-description \
    ros-noetic-turtlebot3-msgs \
    ros-noetic-turtlebot3-gazebo \
    ros-noetic-turtlebot3-bringup

# RUN apt-get update && apt-get install -y libwiringpi-dev
